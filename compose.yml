services:
  db_pg:
    build:
      context: ./db_pg
      dockerfile: Dockerfile
    healthcheck:
      test: pg_isready -U postgres
      interval: 1m30s
      timeout: 30s
      retries: 3
      start_period: 30s
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: kibana:8.12.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic
    volumes:
      - kibana-data:/usr/share/kibana/data
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  rabbitmq:
    container_name: rabbitmq
    image: heidiks/rabbitmq-delayed-message-exchange:latest
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  pg_data:
    driver: local
  es_data:
    driver: local
  kibana-data:
    driver: local
  rabbitmq-data:
    driver: local

networks:
  elastic:
